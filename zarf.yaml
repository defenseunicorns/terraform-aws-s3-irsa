kind: ZarfPackageConfig
metadata:
  name: terraform-aws-s3-irsa
  description: "Terraform module to create an S3 bucket with IRSA enabled"
  # x-release-please-start-version
  version: "0.1.4"
  # x-release-please-end
  architecture: amd64
  source: https://github.com/defenseunicorns/terraform-aws-uds-s3-irsa
  documentation: https://github.com/defenseunicorns/terraform-aws-uds-s3-irsa
  vendor: Defense Unicorns

variables:
  - name: APP
    description: "Name of the application i.e. loki, velero, gitlab"
  - name: REGION
    description: "target AWS region"
  - name: NAME
    description: "Name of the target cluster"
  - name: ZARF_VERSION
    default: "v0.39.0"
  - name: STATE_BUCKET_NAME
    description: "Name of the pre-existing Terraform state S3 bucket"
  - name: IAC_STATE_KEY
    description: "Path to the IAC state file key created from this pkg"
  - name: STATE_DYNAMODB_TABLE_NAME
    description: "Name of the DynamoDB table used for Terraform state locking"
  - name: EPHEMERAL
    description: "Set whether the cluster should be considered ephemeral - if true all resources will be force destroyed on removal"
    default: "false"
  - name: FORCE_DESTROY
    description: "If set to true, delete the S3 bucket and corresponding KMS key associated with the Loki bucket. Overrides ephemeral setting."
    default: "false"

components:
  - name: set-ephemeral
    required: true
    actions:
      onDeploy:
        before:
          - cmd: |
              if [ -z "${ZARF_VAR_FORCE_DESTROY}" ]; then
                echo "${ZARF_VAR_EPHEMERAL}"
              else
                echo "${ZARF_VAR_FORCE_DESTROY}"
              fi
            mute: true
            setVariables:
              - name: FORCE_DESTROY

  - name: tofu-init
    required: true
    description: Tofu init using zarf actions
    actions:
      onCreate:
        defaults:
          maxTotalSeconds: 300
          maxRetries: 3
        before:
          - cmd: "tofu init -backend=false"
            dir: ./s3-irsa
      onDeploy:
        before:
          - cmd: rm -rf ./s3-irsa || true
    files:
      - source: ./s3-irsa/
        target: ./s3-irsa/

  - name: execute-tofu
    required: true
    actions:
      onDeploy:
        defaults:
          dir: s3-irsa/
        before:
          - cmd: |
              tofu init -force-copy \
              -backend-config="bucket=${ZARF_VAR_STATE_BUCKET_NAME}" \
              -backend-config="key=${ZARF_VAR_IAC_STATE_KEY}" \
              -backend-config="region=${ZARF_VAR_REGION}" \
              -backend-config="dynamodb_table=${ZARF_VAR_STATE_DYNAMODB_TABLE_NAME}"
          - cmd: tofu apply -auto-approve
            maxRetries: 3
      onRemove:
        defaults:
          dir: s3-irsa/
        before:
          - cmd: |
              if [ "$(tofu output force_destroy)" = true ]; then
                tofu destroy -auto-approve
              else
                echo "Skipping remove, force_destroy is set to false"
              fi
            maxRetries: 3

  - name: tofu-outputs
    required: true
    actions:
      onDeploy:
        defaults:
          dir: s3-irsa/
        after:
          - cmd: tofu output s3_bucket | grep loki | sed 's/ //g; s/"//g; s/,//g'
            setVariables: 
              - name: LOKI_S3_BUCKET
          - cmd: tofu output irsa_role_arn | grep loki | sed 's/ //g; s/"//g; s/,//g'
            setVariables: 
              - name: LOKI_S3_IRSA_ROLE_ARN
          - cmd: tofu output region
            setVariables: 
              - name: LOKI_S3_AWS_REGION
              - name: VELERO_S3_AWS_REGION
          - cmd: tofu output s3_bucket | grep velero | sed 's/ //g; s/"//g; s/,//g'
            setVariables: 
              - name: VELERO_S3_BUCKET
          - cmd: tofu output irsa_role_arn | grep velero | sed 's/ //g; s/"//g; s/,//g'
            setVariables: 
              - name: VELERO_S3_IRSA_ROLE_ARN

  - name: tofu-outputs-text
    required: true
    actions:
      onDeploy:
        defaults:
          dir: s3-irsa/
        after:
          - cmd: tofu output s3_bucket > s3_bucket.txt
          - cmd: tofu output irsa_role_arn > s3_irsa_role_arn.txt
